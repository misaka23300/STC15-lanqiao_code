C51 COMPILER V9.60.7.0   MAIN                                                              06/07/2025 21:00:56 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE code\main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings
                    -\main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include "main.h"
   2          
   3          
   4          enum {
   5              CCAP0_TIME = 1000,
   6              UART_LEN = 16,
   7              KEY_TIME = 20
   8          };
   9          
  10          uint setPcaTime;
  11          uchar receiveData[UART_LEN];
  12          
  13          typedef struct {
  14              uchar time;
  15              uchar press;
  16          
  17          } KEY;
  18          
  19          KEY key;
  20          
  21          
  22          long times;
  23          
  24          
  25          
  26          // PCA_______________________________________
  27          
  28          void pcaInterrupt() interrupt 7
  29          {
  30   1          if (CCF0)
  31   1          {
  32   2              CCF0 = 0;
  33   2              setPcaTime += CCAP0_TIME;
  34   2      
  35   2              CCAP0L = setPcaTime;
  36   2              CCAP0H = setPcaTime >> 8;
  37   2              
  38   2              time_1ms();
  39   2          }
  40   1      }
  41          
  42          
  43          // 串口_______________________________________
  44          
  45          // str -> 指针地址
  46          // *str -> 指针的取值
  47          void uartSend(uchar *str)
  48          {       
  49   1          while (*str != '\0')
  50   1          {
  51   2              SBUF = *str;
  52   2              while (TI == 0);
  53   2              TI = 0;
  54   2              str++;
C51 COMPILER V9.60.7.0   MAIN                                                              06/07/2025 21:00:56 PAGE 2   

  55   2          }
  56   1      }
  57          
  58          
  59          void Uart1_Isr(void) interrupt 4
  60          {
  61   1        //uchar Data;
  62   1          //static uchar index;
  63   1             
  64   1        if (RI)       //检测串口1接收中断
  65   1        {
  66   2              //清除串口1接收中断请求位
  67   2              ET0 = 0;
  68   2              P0 = SBUF;
  69   2      
  70   2              ET0 = 1;
  71   2              batch(4);
  72   2              RI = 0; 
  73   2              /* if (Data != '\n' && index < (UART_LEN - 1))
  74   2              {
  75   2                  receiveData[index] = Data;
  76   2                  index++;
  77   2              }
  78   2              else
  79   2              {
  80   2                  receiveData[index] = '\0';
  81   2                  index = 0;
  82   2                  
  83   2              } */
  84   2              //uartSend("ciallo~");
  85   2        }
  86   1          //uartSend("ciallo.cc");
  87   1          
  88   1      }
  89          
  90          
  91          // 任务调度_______________________________________
  92          
  93          
  94          void time_1ms()
  95          {
  96   1          seg_display();
  97   1          led_display();
  98   1      
  99   1          if (key.time < KEY_TIME) { key.time++; }
 100   1          times++;
 101   1      
 102   1       }
 103          
 104          
 105          void task_loop()
 106          {
 107   1          if (key.time == KEY_TIME)
 108   1          {
 109   2              key_task();
 110   2              key.time = 0;
 111   2          }
 112   1      }
 113          
 114          void main()
 115          {
 116   1          uchar message[] = "start";
C51 COMPILER V9.60.7.0   MAIN                                                              06/07/2025 21:00:56 PAGE 3   

 117   1          clean_display();
 118   1          timer();
 119   1          uartSend("start");
 120   1          while (1)
 121   1          {
 122   2              task_loop();
 123   2          }
 124   1      }
 125          
 126          
 127          // _________________________________________任务函数
 128          
 129          void key_task()
 130          {
 131   1          key.press = key_scan();
 132   1          /* if (key.press != 99)
 133   1          {
 134   1              seg_list[0] = key.press / 10;
 135   1              seg_list[1] = key.press / 10 % 10;
 136   1          } */
 137   1         seg_list[3] = times / 10000 % 10;
 138   1         seg_list[4] = times / 1000 % 10;
 139   1         seg_list[5] = times / 100 % 10;
 140   1         seg_list[6] = times / 10 % 10;
 141   1         seg_list[7] = times % 10;
 142   1      
 143   1      }
 144          
 145          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    419    ----
   CONSTANT SIZE    =     12    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     24       6
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
