C51 COMPILER V9.60.7.0   MAIN                                                              06/09/2025 08:54:28 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE code\main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings
                    -\main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include "main.h"
   2          
   3          
   4          enum {
   5              CCAP0_TIME = 1000,
   6              UART_LEN = 16,
   7              KEY_TIME = 20,
   8              FREQ_TIME = 1000
   9          };
  10          
  11          uint setPcaTime;
  12          uchar receiveData[UART_LEN];
  13          uchar delay_send_flag;
  14          uchar send_temp[];
  15          
  16          typedef struct {
  17              uchar time;
  18              uchar press;
  19          
  20          } KEY;
  21          
  22          KEY key;
  23          
  24          
  25          idata long times;
  26          idata uint time_1000;
  27          
  28          typedef struct {
  29              uint time;
  30              long times;
  31              long times_out;
  32          } FREQ;
  33          
  34          FREQ freq;
  35          
  36          typedef struct {
  37              uchar now_x;
  38              uchar now_y;
  39          
  40          
  41          } CAR;
  42          
  43          CAR car;
  44          
  45          
  46          
  47          // PCA_______________________________________
  48          
  49          void pcaInterrupt() interrupt 7
  50          {
  51   1          if (CCF0)
  52   1          {
  53   2              CCF0 = 0;
  54   2              setPcaTime += CCAP0_TIME;
C51 COMPILER V9.60.7.0   MAIN                                                              06/09/2025 08:54:28 PAGE 2   

  55   2      
  56   2              CCAP0L = setPcaTime;
  57   2              CCAP0H = setPcaTime >> 8;
  58   2              
  59   2              time_1ms();
  60   2          }
  61   1      }
  62          
  63          
  64          // 串口_______________________________________
  65          
  66          // str -> 指针地址
  67          // *str -> 指针的取值
  68          void uartSend(uchar *str)
  69          {       
  70   1          while (*str != '\0')
  71   1          {
  72   2              SBUF = *str;
  73   2              while (TI == 0);
  74   2              TI = 0;
  75   2              str++;
  76   2          }
  77   1      }
  78          
  79          
  80          void Uart1_Isr(void) interrupt 4
  81          {
  82   1          uchar Data;
  83   1          static uchar index;
  84   1      
  85   1          uchar receive_ciallo[] = "ciallo";
  86   1      
  87   1          if (RI)
  88   1          {
  89   2              RI = 0;
  90   2              Data = SBUF;
  91   2      
  92   2              if (Data != '\n' && index < (UART_LEN - 1))
  93   2              {
  94   3                  receiveData[index] = Data;
  95   3                  index++;
  96   3              }
  97   2              else
  98   2              {
  99   3                  receiveData[index] = '\0';
 100   3                  index = 0;
 101   3              }
 102   2      
 103   2              
 104   2      
 105   2      
 106   2          }
 107   1      
 108   1          /* uchar Data[UART_LEN];
 109   1          static uchar index;
 110   1          uchar receive_ciallo[] = "ciallo"; 
 111   1      
 112   1        if (RI)       //检测串口1接收中断
 113   1        {
 114   1              //清除串口1接收中断请求位
 115   1              RI = 0;
 116   1              Data[index] = SBUF;
C51 COMPILER V9.60.7.0   MAIN                                                              06/09/2025 08:54:28 PAGE 3   

 117   1              
 118   1              if (Data[index] != '\n' && index < (UART_LEN - 1))
 119   1              {
 120   1                  receiveData[index] = Data;
 121   1                  index++;
 122   1              }
 123   1              else
 124   1              {
 125   1                  receiveData[index] = '\0';
 126   1                  index = 0;
 127   1              }
 128   1      
 129   1              if (strcmp(Data, receive_ciallo) == 0)
 130   1              {
 131   1                  //uartSend("ciallo~");
 132   1              }
 133   1        } */
 134   1      
 135   1          
 136   1          
 137   1          
 138   1      }
 139          
 140          // 频率
 141          void Timer0_Isr(void) interrupt 1
 142          {
 143   1          freq.times++;
 144   1      }
 145          
 146          
 147          // 任务调度_______________________________________
 148          
 149          
 150          void time_1ms()
 151          {
 152   1          seg_display();
 153   1          led_display();
 154   1      
 155   1          if (key.time < KEY_TIME) { key.time++; }
 156   1          if (freq.time < FREQ_TIME) { freq.time++; }
 157   1      
 158   1          time_1000++;
 159   1          if (time_1000 == 1000)
 160   1          {
 161   2              time_1000 = 0;
 162   2              times++;
 163   2          }
 164   1          
 165   1       }
 166          
 167          
 168          void task_loop()
 169          {
 170   1          if (key.time == KEY_TIME)
 171   1          {
 172   2              key_task();        
 173   2              key.time = 0;
 174   2          }
 175   1      
 176   1          if (freq.time == FREQ_TIME)
 177   1          {
 178   2              freq.time = 0;
C51 COMPILER V9.60.7.0   MAIN                                                              06/09/2025 08:54:28 PAGE 4   

 179   2              freq_task();
 180   2          }
 181   1      
 182   1          if (delay_send_flag)
 183   1          {
 184   2              delay_send_flag = 0;
 185   2              //uartSend();
 186   2          }
 187   1      }
 188          
 189          void main()
 190          {
 191   1          //uchar message[] = "start";
 192   1          clean_display();
 193   1          timer();
 194   1          uartSend("start");
 195   1          while (1)
 196   1          {
 197   2              task_loop();
 198   2          }
 199   1      }
 200          
 201          
 202          // _________________________________________任务函数
 203          
 204          void key_task()
 205          {
 206   1          key.press = key_scan();
 207   1      }
 208          
 209          
 210          
 211          /* void free_state(uchar xx, yy)
 212          {
 213              uchar distance_x;
 214              uchar distance_y;
 215              uchar distance;
 216              distance_x = car.x - xx;
 217              distance_y = car.y - yy;
 218          
 219              distance = distance_x * distance_x + distance_y *distance_y;
 220              distance = sqrt(distance);
 221          
 222          } */
 223          
 224          
 225          void freq_task()
 226          {
 227   1          freq.times_out = freq.times;
 228   1          freq.times = 0;
 229   1          
 230   1      }
 231          
 232          
 233          void number_display(uint i)
 234          {
 235   1          seg_list[3] = i / 10000 % 10;
 236   1          seg_list[4] = i / 1000 % 10;
 237   1          seg_list[5] = i / 100 % 10;
 238   1          seg_list[6] = i / 10 % 10;
 239   1          seg_list[7] = i % 10;
 240   1      
C51 COMPILER V9.60.7.0   MAIN                                                              06/09/2025 08:54:28 PAGE 5   

 241   1      }
 242          
 243          void delay_send_uart()
 244          {
 245   1      
 246   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    533    ----
   CONSTANT SIZE    =     13    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     34       7
   IDATA SIZE       =      6    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
