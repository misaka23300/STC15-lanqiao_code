C51 COMPILER V9.60.7.0   MAIN                                                              06/09/2025 19:01:23 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE code\main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings
                    -\main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include "main.h"
   2          
   3          
   4          
   5          
   6          idata KEY key;
   7          idata FREQ freq;
   8          idata CAR car;
   9          
  10          
  11          
  12          
  13          // PCA_______________________________________
  14          
  15          /* void pcaInterrupt() interrupt 7
  16          {
  17              if (CCF0)
  18              {
  19                  CCF0 = 0;
  20                  setPcaTime += CCAP0_TIME;
  21          
  22                  CCAP0L = setPcaTime;
  23                  CCAP0H = setPcaTime >> 8;
  24                  
  25                  time_1ms();
  26              }
  27          }
  28           */
  29          
  30          void Timer1_Isr(void) interrupt 3
  31          {
  32   1          time_1ms();
  33   1      }
  34          // 频率
  35          void Timer0_Isr(void) interrupt 1
  36          {
  37   1          freq.times++;
  38   1      }
  39          
  40          
  41          // 任务调度_______________________________________
  42          
  43          
  44          void time_1ms()
  45          {
  46   1          seg_display();
  47   1          led_display();
  48   1      
  49   1      
  50   1          if (key.time < KEY_TIME) { key.time++; }
  51   1          if (freq.time < FREQ_TIME) { freq.time++; }
  52   1          if (uart.time < UART_TIME) {uart.time++; }
  53   1          if (uart.out_time_flag && uart.out_time < 11) { uart.out_time++; }
  54   1      
C51 COMPILER V9.60.7.0   MAIN                                                              06/09/2025 19:01:23 PAGE 2   

  55   1       }
  56          
  57          
  58          void task_loop()
  59          {
  60   1          if (key.time == KEY_TIME)
  61   1          {
  62   2              key_task();        
  63   2              key.time = 0;
  64   2          }
  65   1      
  66   1          if (freq.time == FREQ_TIME)
  67   1          {
  68   2              freq.time = 0;
  69   2              freq_task();
  70   2          }
  71   1      
  72   1          if (uart.time == UART_TIME)
  73   1          {
  74   2              uart.time = 0;
  75   2              uart_task();
  76   2              
  77   2          }
  78   1      }
  79          
  80          void main()
  81          {
  82   1          
  83   1          clean_display();
  84   1          timer();
  85   1          printf("start");
  86   1          
  87   1          while (1)
  88   1          {
  89   2              task_loop();
  90   2          }
  91   1      }
  92          
  93          
  94          // _________________________________________任务函数
  95          
  96          void key_task()
  97          {
  98   1          key.press = key_scan();
  99   1      }
 100          
 101          
 102          
 103          /* void free_state(uchar xx, yy)
 104          {
 105              uchar distance_x;
 106              uchar distance_y;
 107              uchar distance;
 108              distance_x = car.x - xx;
 109              distance_y = car.y - yy;
 110          
 111              distance = distance_x * distance_x + distance_y *distance_y;
 112              distance = sqrt(distance);
 113          
 114          } */
 115          
 116          
C51 COMPILER V9.60.7.0   MAIN                                                              06/09/2025 19:01:23 PAGE 3   

 117          void freq_task()
 118          {
 119   1          freq.times_out = freq.times;
 120   1          freq.times = 0;
 121   1          
 122   1      }
 123          
 124          
 125          void number_display(uint i)
 126          {
 127   1          seg_list[3] = i / 10000 % 10;
 128   1          seg_list[4] = i / 1000 % 10;
 129   1          seg_list[5] = i / 100 % 10;
 130   1          seg_list[6] = i / 10 % 10;
 131   1          seg_list[7] = i % 10;
 132   1      
 133   1      }
 134          
 135          
 136          void uart_task()
 137          {
 138   1          if (uart.index == 0) {return ;}
 139   1      
 140   1          if (uart.out_time > 10)
 141   1          {
 142   2              uart.out_time = 0;
 143   2              uart.out_time_flag = 0;
 144   2      
 145   2              printf("ciallo~");
 146   2          }
 147   1      }
 148          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    406    ----
   CONSTANT SIZE    =     14    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     19    ----
   IDATA SIZE       =     20    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
