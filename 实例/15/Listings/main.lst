C51 COMPILER V9.60.7.0   MAIN                                                              06/09/2025 09:34:52 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE code\main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings
                    -\main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include "main.h"
   2          
   3          
   4          enum {
   5              CCAP0_TIME = 1000,
   6              UART_LEN = 16,
   7              KEY_TIME = 20,
   8              FREQ_TIME = 1000
   9          };
  10          
  11          uint setPcaTime = CCAP0_TIME;
  12          
  13          uchar receiveData[UART_LEN];
  14          uchar delay_send_flag;
  15          uchar send_temp[];
  16          
  17          typedef struct {
  18              uchar time;
  19              uchar press;
  20          
  21          } KEY;
  22          
  23          KEY key;
  24          
  25          
  26          idata long times;
  27          idata uint time_1000;
  28          
  29          typedef struct {
  30              uint time;
  31              long times;
  32              long times_out;
  33          } FREQ;
  34          
  35          FREQ freq;
  36          
  37          typedef struct {
  38              uchar now_x;
  39              uchar now_y;
  40          
  41          
  42          } CAR;
  43          
  44          CAR car;
  45          
  46          
  47          
  48          // PCA_______________________________________
  49          
  50          void pcaInterrupt() interrupt 7
  51          {
  52   1          if (CCF0)
  53   1          {
  54   2              CCF0 = 0;
C51 COMPILER V9.60.7.0   MAIN                                                              06/09/2025 09:34:52 PAGE 2   

  55   2              setPcaTime += CCAP0_TIME;
  56   2      
  57   2              CCAP0L = setPcaTime;
  58   2              CCAP0H = setPcaTime >> 8;
  59   2              
  60   2              time_1ms();
  61   2          }
  62   1      }
  63          
  64          
  65          // 串口_______________________________________
  66          
  67          // str -> 指针地址
  68          // *str -> 指针的取值
  69          void uartSend(uchar *str)
  70          {       
  71   1          while (*str != '\0')
  72   1          {
  73   2              SBUF = *str;
  74   2              while (TI == 0);
  75   2              TI = 0;
  76   2              str++;
  77   2          }
  78   1      }
  79          
  80          
  81          void Uart1_Isr(void) interrupt 4
  82          {
  83   1          uchar Data;
  84   1          static uchar index;
  85   1      
  86   1          uchar receive_ciallo[] = "ciallo";
  87   1      
  88   1          if (RI)
  89   1          {
  90   2              /* RI = 0;
  91   2              Data = SBUF;
  92   2      
  93   2              if (Data != '\n' && index < (UART_LEN - 1))
  94   2              {
  95   2                  receiveData[index] = Data;
  96   2                  index++;
  97   2              }
  98   2              else
  99   2              {
 100   2                  receiveData[index] = '\0';
 101   2                  index = 0;
 102   2              } */
 103   2          }  
 104   1      }
*** WARNING C280 IN LINE 83 OF code\main.c: 'Data': unreferenced local variable
*** WARNING C280 IN LINE 84 OF code\main.c: 'index': unreferenced local variable
 105          
 106          // 频率
 107          void Timer0_Isr(void) interrupt 1
 108          {
 109   1          freq.times++;
 110   1      }
 111          
 112          
 113          // 任务调度_______________________________________
 114          
C51 COMPILER V9.60.7.0   MAIN                                                              06/09/2025 09:34:52 PAGE 3   

 115          
 116          void time_1ms()
 117          {
 118   1          seg_display();
 119   1          led_display();
 120   1      
 121   1          if (key.time < KEY_TIME) { key.time++; }
 122   1          if (freq.time < FREQ_TIME) { freq.time++; }
 123   1      
 124   1          time_1000++;
 125   1          if (time_1000 == 1000)
 126   1          {
 127   2              time_1000 = 0;
 128   2              times++;
 129   2          }
 130   1          
 131   1       }
 132          
 133          
 134          void task_loop()
 135          {
 136   1          if (key.time == KEY_TIME)
 137   1          {
 138   2              key_task();        
 139   2              key.time = 0;
 140   2          }
 141   1      
 142   1          if (freq.time == FREQ_TIME)
 143   1          {
 144   2              freq.time = 0;
 145   2              freq_task();
 146   2          }
 147   1      
 148   1          if (delay_send_flag)
 149   1          {
 150   2              delay_send_flag = 0;
 151   2              
 152   2          }
 153   1      }
 154          
 155          void main()
 156          {
 157   1          
 158   1          clean_display();
 159   1          timer();
 160   1          uartSend("start");
 161   1          while (1)
 162   1          {
 163   2              task_loop();
 164   2          }
 165   1      }
 166          
 167          
 168          // _________________________________________任务函数
 169          
 170          void key_task()
 171          {
 172   1          key.press = key_scan();
 173   1      }
 174          
 175          
 176          
C51 COMPILER V9.60.7.0   MAIN                                                              06/09/2025 09:34:52 PAGE 4   

 177          /* void free_state(uchar xx, yy)
 178          {
 179              uchar distance_x;
 180              uchar distance_y;
 181              uchar distance;
 182              distance_x = car.x - xx;
 183              distance_y = car.y - yy;
 184          
 185              distance = distance_x * distance_x + distance_y *distance_y;
 186              distance = sqrt(distance);
 187          
 188          } */
 189          
 190          
 191          void freq_task()
 192          {
 193   1          freq.times_out = freq.times;
 194   1          freq.times = 0;
 195   1          
 196   1      }
 197          
 198          
 199          void number_display(uint i)
 200          {
 201   1          seg_list[3] = i / 10000 % 10;
 202   1          seg_list[4] = i / 1000 % 10;
 203   1          seg_list[5] = i / 100 % 10;
 204   1          seg_list[6] = i / 10 % 10;
 205   1          seg_list[7] = i % 10;
 206   1      
 207   1      }
 208          
 209          void delay_send_uart()
 210          {
 211   1      
 212   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    493    ----
   CONSTANT SIZE    =     13    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     34       8
   IDATA SIZE       =      6    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  2 WARNING(S),  0 ERROR(S)
