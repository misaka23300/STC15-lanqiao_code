C51 COMPILER V9.60.7.0   MACHINE                                                           06/09/2025 18:26:58 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MACHINE
OBJECT MODULE PLACED IN .\Objects\machine.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE code\machine.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listi
                    -ngs\machine.lst) TABS(2) OBJECT(.\Objects\machine.obj)

line level    source

   1          #include "machine.h"
   2          
   3          void clean_display()
   4          {
   5   1          P0M0 = 0x00; P0M1 = 0x00;
   6   1          P1M0 = 0x00; P1M1 = 0x00;
   7   1          P2M0 = 0x00; P2M1 = 0x00;
   8   1          P3M0 = 0x00; P3M1 = 0x00;
   9   1          P4M0 = 0x00; P4M1 = 0x00;
  10   1          P5M0 = 0x00; P5M1 = 0x00;
  11   1          P6M0 = 0x00; P6M1 = 0x00;
  12   1          P7M0 = 0x00; P7M1 = 0x00;
  13   1      
  14   1          P0 = 0xFF;
  15   1          batch(4);
  16   1      
  17   1          P0 = 0xAF;
  18   1          batch(5);
  19   1      
  20   1          P0 = 0x00;
  21   1          batch(6);
  22   1      
  23   1          P0 = 0xFF;
  24   1          batch(7);
  25   1      }
  26          
  27          void batch(uchar i)
  28          {
  29   1          switch (i)
  30   1          {
  31   2              case 4: { P2 = (P2 & 0x1F) | 0x80; break; }
  32   2              case 5: { P2 = (P2 & 0x1F) | 0xA0; break; }
  33   2              case 6: { P2 = (P2 & 0x1F) | 0xC0; break; }
  34   2              case 7: { P2 = (P2 & 0x1F) | 0xE0; break; }
  35   2          }
  36   1          P2 = (P2 & 0x1F);
  37   1      }
  38          
  39          void Timer0_Init(void) // 1微秒@12.000MHz
  40          {
  41   1          AUXR |= 0x80;      // 定时器时钟1T模式
  42   1          TMOD &= 0xF0;      // 设置定时器模式
  43   1          TMOD |= 0x02;      // 设置定时器模式
  44   1          TMOD |= 0x04;
  45   1          TL0 = 0xFF;        // 设置定时初始值
  46   1          TH0 = 0xFF;        // 设置定时重载值
  47   1          TF0 = 0;           // 清除TF0标志
  48   1          TR0 = 1;           // 定时器0开始计时
  49   1          ET0 = 1;           // 使能定时器0中断
  50   1      }
  51          
  52          void Timer1_Init(void) // 1毫秒@12.000MHz
  53          {
  54   1          AUXR |= 0x40;      // 定时器时钟1T模式
C51 COMPILER V9.60.7.0   MACHINE                                                           06/09/2025 18:26:58 PAGE 2   

  55   1          TMOD &= 0x0F;      // 设置定时器模式
  56   1          TL1 = 0x20;        // 设置定时初始值
  57   1          TH1 = 0xD1;        // 设置定时初始值
  58   1          TF1 = 0;           // 清除TF1标志
  59   1          TR1 = 1;           // 定时器1开始计时
  60   1          ET1 = 1;           // 使能定时器1中断
  61   1      }
  62          
  63          void Uart1_Init(void) // 9600bps@12.000MHz
  64          {
  65   1          SCON = 0x50;       // 8位数据,可变波特率
  66   1          AUXR |= 0x01;      // 串口1选择定时器2为波特率发生器
  67   1          AUXR |= 0x04;      // 定时器时钟1T模式
  68   1          T2L = 0xC7;        // 设置定时初始值
  69   1          T2H = 0xFE;        // 设置定时初始值
  70   1          AUXR |= 0x10;      // 定时器2开始计时
  71   1          ES = 1;            // 使能串口1中断
  72   1          // PS = 1;
  73   1      }
  74          
  75          void pcaInit()
  76          {
  77   1          uint CCAP0_TIME = 1000;
  78   1      
  79   1          CMOD = 0x00;
  80   1          CCON = 0x00;
  81   1      
  82   1          CH = 0x00; CL = 0x00;
  83   1      
  84   1          CCAPM0 = 0x49;  // 0100 1001
  85   1          CCAP0L = CCAP0_TIME; CCAP0H = CCAP0_TIME >> 8;
  86   1      
  87   1          EA = 1;
  88   1          CCON = 0x41;     // 0100 0001
  89   1          PPCA = 1;
  90   1      }
  91          
  92          void timer()
  93          {
  94   1          // timer2 -> 串口
  95   1          // timer1 -> 超声波
  96   1          // timer0 -> 频率
  97   1      
  98   1          Timer0_Init();
  99   1          Timer1_Init();
 100   1          //pcaInit();
 101   1          Uart1_Init();
 102   1          EA = 1;
 103   1      }
 104          
 105          
 106          
 107          
 108          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    227    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
C51 COMPILER V9.60.7.0   MACHINE                                                           06/09/2025 18:26:58 PAGE 3   

   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
