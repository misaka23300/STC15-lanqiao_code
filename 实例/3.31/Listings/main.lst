C51 COMPILER V9.60.7.0   MAIN                                                              04/01/2025 17:41:46 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE code\main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings
                    -\main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          // https://www.4t.wiki/exercise/7d88509d740668ecceaf34308a093aac
   2          
   3          #include "main.h"
   4          
   5          extern uchar led_value[8];
   6          extern uchar seg[8];
   7          
   8          
   9          enum {
  10              KEY_TIME = 15,
  11              STATE_TIME = 20,
  12              SONIC_TIME = 900,
  13              ADC_TIME = 90,
  14              SHAN_TIME = 100
  15          };
  16          
  17          
  18          
  19          // pcf8591
  20          uchar ADC_value;
  21          uint ADC_time;
  22          
  23          // led
  24          uint shan_time;
  25          bit shan_flag;
  26          
  27          // seg
  28          struct {
  29              uchar time;
  30              uchar mode_1;
  31              uchar mode_2;
  32              
  33              // 旋钮模式选择调整上限还是下限  
  34              // 0为下限 1 为上限
  35              uchar check_mode2;
  36              uchar one_flag;
  37          } state;
  38          
  39          
  40          // 参数变量
  41          struct {
  42              char low_value;
  43              char high_value;
  44              uchar out_times;
  45          } argument;
  46          
  47          
  48          // key
  49          struct {
  50              uchar time;
  51              uchar press;
  52          } key;
  53          
  54          
C51 COMPILER V9.60.7.0   MAIN                                                              04/01/2025 17:41:46 PAGE 2   

  55          // 继电器
  56          
  57          
  58          // sonic
  59          struct {
  60              uchar distance;
  61              uint time;
  62              uchar list[3];
  63          } sonic;
  64          
  65          void main()
  66          {
  67   1        
  68   1          boot_init();
  69   1          led_state();
  70   1      
  71   1      
  72   1          state.one_flag = 99;
  73   1          argument.high_value = 60;
  74   1          argument.low_value = 10;
  75   1         
  76   1      
  77   1          while (1)
  78   1          {
  79   2              if (key.time == KEY_TIME)
  80   2              {
  81   3                  key_proc();
  82   3                  key.time = 0;
  83   3              }
  84   2      
  85   2              if (state.time == STATE_TIME)
  86   2              {
  87   3                  state_proc();
  88   3                  state.time = 0;
  89   3              }
  90   2      
  91   2              if (sonic.time == SONIC_TIME)
  92   2              {
  93   3                  sonic_proc();
  94   3                  sonic.time = 0;
  95   3              }
  96   2      
  97   2              if (ADC_time == ADC_TIME )
  98   2              {
  99   3                  if (state.mode_2 == 1)
 100   3                      ADC_proc();
 101   3                  ADC_time = 0;
 102   3              }
 103   2      
 104   2              if (shan_time == SHAN_TIME)
 105   2              {
 106   3                  if (shan_flag == 1)
 107   3                  {
 108   4                      shan_flag = 0;
 109   4                  }
 110   3                  else
 111   3                  {
 112   4                      shan_flag = 1;
 113   4                  }
 114   3                  shan_time = 0;
 115   3              }
 116   2          }
C51 COMPILER V9.60.7.0   MAIN                                                              04/01/2025 17:41:46 PAGE 3   

 117   1      }
 118          
 119          
 120          void Timer2_Isr(void) interrupt 12
 121          {
 122   1          static uint i;
 123   1          i++;
 124   1          if (i > 30000) { i = 0; }
 125   1      
 126   1          seg_display();
 127   1          if (i % 1 == 0)
 128   1              led_display();
 129   1              adjust_out();
 130   1      
 131   1          if ( key.time < KEY_TIME ) { key.time++; }
 132   1      
 133   1          if ( state.time < STATE_TIME ) { state.time++; }
 134   1      
 135   1          if ( sonic.time < SONIC_TIME ) { sonic.time++; }
 136   1      
 137   1          if ( ADC_time < ADC_TIME ) { ADC_time++; }
 138   1          
 139   1          if ( shan_time < SHAN_TIME ) { shan_time++; }
 140   1      }
 141          
 142          void key_proc()
 143          {   
 144   1          
 145   1          key.press = key_scan();
 146   1          
 147   1          switch (key.press)
 148   1          {
 149   2              case 4:
 150   2              {
 151   3                  state.mode_1 = (state.mode_1 + 1) % 3;
 152   3                  led_state();
 153   3              }
 154   2              break;
 155   2      
 156   2              case 5:
 157   2              {
 158   3                  if (state.mode_1 == 1)
 159   3                      { state.mode_2 = (state.mode_2 + 1) % 2; }
 160   3                      
 161   3                  else if (state.mode_1 == 2)
 162   3                  {
 163   4                      argument.out_times = 0;
 164   4                  }
 165   3              }
 166   2              break;
 167   2      
 168   2              case 9:
 169   2              {
 170   3                  if (state.mode_1 == 1 && state.mode_2 == 0)
 171   3                  {
 172   4                      argument.high_value = argument.high_value + 10;
 173   4                      if (argument.high_value > 90)
 174   4                      {
 175   5                          argument.high_value = 50;
 176   5                      }
 177   4                  }
 178   3                  else if (state.mode_1 == 1 && state.mode_2 == 1)
C51 COMPILER V9.60.7.0   MAIN                                                              04/01/2025 17:41:46 PAGE 4   

 179   3                  {
 180   4                      led_value[7] = 0;
 181   4                      state.check_mode2 = 0;
 182   4                      ADC_proc();
 183   4                  }
 184   3              }
 185   2              break;
 186   2      
 187   2              case 8:
 188   2              {
 189   3                  if (state.mode_1 == 1 && state.mode_2 == 0)
 190   3                  {
 191   4                      argument.low_value = argument.low_value + 10;
 192   4                      if (argument.low_value > 40)
 193   4                      {
 194   5                          argument.low_value = 0;
 195   5                      }
 196   4                  }
 197   3                  else if (state.mode_1 == 1 && state.mode_2 == 1)
 198   3                  {
 199   4                      led_value[7] = 1;
 200   4                      state.check_mode2 = 1;
 201   4                      ADC_proc();
 202   4                  }
 203   3              }
 204   2              break;
 205   2          }
 206   1      }
 207          
 208          void state_proc()
 209          {
 210   1          switch (state.mode_1)
 211   1          {
 212   2              // 测距
 213   2              case 0:
 214   2              {
 215   3                  if (state.one_flag != 0)
 216   3                  {
 217   4                      state.one_flag = 0; 
 218   4                      seg[0] = 43; seg[1] = 16; seg[2] = 16; seg[3] = 16; seg[4] = 16;
 219   4                  }
 220   3                  
 221   3                  seg[5] = sonic.list[0];
 222   3                  seg[6] = sonic.list[1];
 223   3                  seg[7] = sonic.list[2];
 224   3              }
 225   2              break;
 226   2      
 227   2              // 参数
 228   2              case 1:
 229   2              {
 230   3                  if (state.one_flag != 1)
 231   3                  {
 232   4                      state.one_flag = 1;
 233   4                      seg[0] = 24; seg[2] = 16; seg[5] = 17;
 234   4                  }
 235   3      
 236   3                  seg[1] = state.mode_2 + 1;
 237   3      
 238   3                  seg[3] = argument.low_value / 10 % 10;
 239   3                  seg[4] = argument.low_value % 10;
 240   3      
C51 COMPILER V9.60.7.0   MAIN                                                              04/01/2025 17:41:46 PAGE 5   

 241   3                  seg[6] = argument.high_value / 10 % 10;
 242   3                  seg[7] = argument.high_value % 10;
 243   3              }
 244   2              break;
 245   2      
 246   2              // 记录界面
 247   2              case 2:
 248   2              {
 249   3                  if (state.one_flag != 2)
 250   3                  {
 251   4                      state.one_flag = 2; 
 252   4                      seg[0] = 14; 
 253   4                      seg[1] = 16; seg[2] = 16; seg[3] = 16; 
 254   4                      seg[4] = 16; seg[5] = 16; seg[6] = 16;
 255   4                  }
 256   3                  if (argument.out_times > 9)
 257   3                      seg[7] = 17;
 258   3                  else
 259   3                      seg[7] = argument.out_times;
 260   3              }
 261   2              break;
 262   2          }
 263   1      }
 264          
 265          
 266          void sonic_proc()
 267          {
 268   1          sonic.distance = sonic_measure();
 269   1      
 270   1          sonic.list[0] = sonic.distance / 100 % 10;
 271   1          sonic.list[1] = sonic.distance / 10 % 10;
 272   1          sonic.list[2] = sonic.distance % 10;
 273   1      
 274   1          delete_0(sonic.list, 3, 0);
 275   1      
 276   1          //adjust_out();
 277   1      }
 278          
 279          void ADC_proc()
 280          {
 281   1        uchar value;
 282   1        
 283   1          ADC_value = ADC(0x03);
 284   1          //led_value[0] = 1;
 285   1      
 286   1          if (ADC_value <= 51)
 287   1          {
 288   2              value = 0; 
 289   2          }
 290   1          else if (51 < ADC_value && ADC_value <= 102)
 291   1          {
 292   2              value = 10;
 293   2          }
 294   1          else if (102 < ADC_value && ADC_value <= 153)
 295   1          {
 296   2              value = 20;
 297   2          }
 298   1          else if (154 < ADC_value && ADC_value <= 205)
 299   1          {
 300   2              value = 30;
 301   2          }
 302   1          else if (205 < ADC_value && ADC_value <= 255)
C51 COMPILER V9.60.7.0   MAIN                                                              04/01/2025 17:41:46 PAGE 6   

 303   1          {
 304   2              value = 40;
 305   2          }
 306   1      
 307   1          if (state.check_mode2 == 1)
 308   1          {
 309   2              argument.low_value = value + 50;
 310   2          }
 311   1          else if (state.check_mode2 == 0)
 312   1          {
 313   2              argument.high_value = value;
 314   2          } 
 315   1      
 316   1          value = 0;
 317   1      }
 318          
 319          
 320          void led_state()
 321          {
 322   1          led_value[0] = 0;
 323   1          led_value[1] = 0;
 324   1          led_value[2] = 0;
 325   1      
 326   1          led_value[state.mode_1] = 1;
 327   1      
 328   1      
 329   1          // uchar i;
 330   1          // for (i = 0;i < 3;i++)
 331   1          // {
 332   1          //     if (i != state.mode_1)
 333   1          //     {
 334   1          //         led_value[i] = 0;
 335   1          //     }
 336   1          //     else
 337   1          //     {
 338   1          //         led_value[i] = 1;
 339   1          //     }
 340   1          // }
 341   1      }
 342          
 343          
 344          void adjust_out()
 345          {
 346   1          static uchar adjust;
 347   1          if (argument.low_value <= sonic.distance && sonic.distance <= argument.high_value)
 348   1          {
 349   2              adjust = 1;
 350   2              led_value[7] = 1;
 351   2          }
 352   1          else 
 353   1          {
 354   2              led_value[7] = shan_flag;
 355   2              if (adjust == 1)
 356   2              {
 357   3                  if (argument.out_times < 11)
 358   3                      argument.out_times++;
 359   3              
 360   3                      
 361   3                  
 362   3                  adjust = 0;
 363   3              }
 364   2          }
C51 COMPILER V9.60.7.0   MAIN                                                              04/01/2025 17:41:46 PAGE 7   

 365   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    860    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     24       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
