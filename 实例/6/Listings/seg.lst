C51 COMPILER V9.60.7.0   SEG                                                               03/19/2025 19:21:02 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE SEG
OBJECT MODULE PLACED IN .\Objects\seg.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE seg.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\seg.l
                    -st) TABS(2) OBJECT(.\Objects\seg.obj)

line level    source

   1          #include "seg.h"
   2          
   3          
   4          
   5          
   6          uchar code letter[] = {                       //标准字库
   7              //   0    1    2    3    4    5    6    7    8    9    A    B    C    D    E    F
   8                  0x3F,0x06,0x5B,0x4F,0x66,0x6D,0x7D,0x07,0x7F,0x6F,0x77,0x7C,0x39,0x5E,0x79,0x71,
   9              //black  -     H    J    K    L    N    o   P    U     t    G    Q    r   M    y
  10                  0x00,0x40,0x76,0x1E,0x70,0x38,0x37,0x5C,0x73,0x3E,0x78,0x3d,0x67,0x50,0x37,0x6e,
  11                  0xBF,0x86,0xDB,0xCF,0xE6,0xED,0xFD,0x87,0xFF,0xEF,0x46};    //0. 1. 2. 3. 4. 5. 6. 7. 8. 9. -1
  12          
  13          uchar seg[8] = {0, 0, 0, 0, 0, 0, 0, 0};
  14          
  15          void seg_display()
  16          {
  17   1          static uchar i;
  18   1      
  19   1          P0 = 0xFF;
  20   1          batch(7);
  21   1          batch(0);
  22   1      
  23   1          P0 = 0x01 << i;
  24   1          batch(6);
  25   1          batch(0);
  26   1      
  27   1          P0 = ~letter[seg[i]];
  28   1          batch(7);
  29   1          batch(0);
  30   1      
  31   1          i = (i + 1) % 8;
  32   1      }
  33          
  34          void set_seg(uchar s0, s1, s2, s3, s4, s5, s6, s7)
  35          {
  36   1          seg[0] = s0;
  37   1          seg[1] = s1;
  38   1          seg[2] = s2;
  39   1          seg[3] = s3;
  40   1          seg[4] = s4;
  41   1          seg[5] = s5;
  42   1          seg[6] = s6;
  43   1          seg[7] = s7;
  44   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     91    ----
   CONSTANT SIZE    =     43    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      9      15
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
C51 COMPILER V9.60.7.0   SEG                                                               03/19/2025 19:21:02 PAGE 2   

END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
