C51 COMPILER V9.60.7.0   DS1302                                                            02/27/2025 21:38:57 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE DS1302
OBJECT MODULE PLACED IN .\Objects\ds1302.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ds1302.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\ds
                    -1302.lst) TABS(2) OBJECT(.\Objects\ds1302.obj)

line level    source

   1          #include "ds1302.h"
   2          
   3          sbit SCK = P1^7;
   4          sbit SDA = P2^3;
   5          sbit RST = P1^3;
   6          
   7          
   8          // 秒 分 时 日 月 星期 年
   9          uchar write_address[7] = {0x80, 0x82, 0x84, 0x86, 0x88, 0x8A, 0x8C};
  10          uchar read_address[7] = {0x81, 0x83, 0x85, 0x87, 0x89, 0x8B, 0x8D};
  11          
  12          uchar send_time[7] = {45, 23, 7, 21, 7, 5, 25};
  13          uchar now_time[7] = {0, 0, 0, 0, 0, 0, 0};
  14          
  15          void Write_Ds1302(unsigned  char temp) 
  16          {
  17   1        unsigned char i;
  18   1        for (i=0;i<8;i++)       
  19   1        { 
  20   2          SCK = 0;
  21   2          SDA = temp&0x01;
  22   2          temp>>=1; 
  23   2          SCK=1;
  24   2        }
  25   1      }   
  26          
  27          //
  28          void Write_Ds1302_Byte( unsigned char address,unsigned char dat )     
  29          {
  30   1        RST=0;  _nop_();
  31   1        SCK=0;  _nop_();
  32   1        RST=1;  _nop_();  
  33   1        Write_Ds1302(address);  
  34   1        Write_Ds1302(dat);    
  35   1        RST=0; 
  36   1      }
  37          
  38          //
  39          unsigned char Read_Ds1302_Byte ( unsigned char address )
  40          {
  41   1        unsigned char i,temp=0x00;
  42   1        RST=0;  _nop_();
  43   1        SCK=0;  _nop_();
  44   1        RST=1;  _nop_();
  45   1        Write_Ds1302(address);
  46   1        for (i=0;i<8;i++)   
  47   1        {   
  48   2          SCK=0;
  49   2          temp>>=1; 
  50   2          if(SDA)
  51   2          temp|=0x80; 
  52   2          SCK=1;
  53   2        } 
  54   1        RST=0;  _nop_();
C51 COMPILER V9.60.7.0   DS1302                                                            02/27/2025 21:38:57 PAGE 2   

  55   1        SCK=0;  _nop_();
  56   1        SCK=1;  _nop_();
  57   1        SDA=0;  _nop_();
  58   1        SDA=1;  _nop_();
  59   1        return (temp);      
  60   1      }
  61          
  62          
  63          uchar hex_to_BCD(uchar HEX)
  64          {
  65   1        uchar BCD;
  66   1        BCD = ((HEX / 10) << 4) + (HEX % 10);
  67   1        return BCD;
  68   1      }
  69          
  70          uchar BCD_to_hex(uchar BCD)
  71          {
  72   1        uchar HEX;
  73   1        HEX = ((BCD >> 4) * 10) + (BCD & 0x0F);
  74   1        return HEX;
  75   1      }
  76          
  77          
  78          void init_time()
  79          {
  80   1        uchar i;
  81   1      
  82   1        // 关闭写保护
  83   1        Write_Ds1302_Byte(0x8E, 0x00);
  84   1      
  85   1        for (i = 0; i < 7;i++)
  86   1        {
  87   2          Write_Ds1302_Byte(write_address[i], send_time[i]);
  88   2        }
  89   1      
  90   1        Write_Ds1302_Byte(0x8E, 0x80);
  91   1        
  92   1      }
  93          
  94          void read_time()
  95          {
  96   1        uchar i;
  97   1        
  98   1        for (i = 0;i < 7;i++)
  99   1        {
 100   2          now_time[i] = Read_Ds1302_Byte(read_address[i]);
 101   2        }
 102   1      
 103   1        for (i = 0;i < 7;i++)
 104   1        {
 105   2          now_time[i] = BCD_to_hex(now_time[i]);
 106   2        }
 107   1      }
 108          
 109          void write_time(uchar* time)
 110          { 
 111   1        uchar i;  
 112   1        for (i = 0;i < 7;i++)
 113   1          send_time[i] = hex_to_BCD(time[i]);
 114   1        init_time();
 115   1      }
 116          
C51 COMPILER V9.60.7.0   DS1302                                                            02/27/2025 21:38:57 PAGE 3   

 117          
 118          
 119          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    242    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     28       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
