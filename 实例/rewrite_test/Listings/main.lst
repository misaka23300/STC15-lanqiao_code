C51 COMPILER V9.60.7.0   MAIN                                                              06/02/2025 19:16:56 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE code\main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings
                    -\main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include "main.h"
   2          
   3          
   4          // 显示状态
   5          typedef struct {
   6              uchar time;
   7              uchar mode_0;
   8          } STATE;
   9          
  10          STATE state;
  11          
  12          // 串口
  13          typedef struct {
  14              uint time;
  15              
  16          } UART;
  17          
  18          code uchar str[] = "ciallo~";
  19          code float number = 0.0721;
  20          
  21          UART uart;
  22          
  23          // 键盘
  24          typedef struct {
  25              uchar time;
  26              uchar press;
  27          } KEY;
  28          
  29          KEY key;
  30          
  31          // 日期
  32          typedef struct {
  33              uchar number[8];
  34              uchar i;
  35              uchar input;
  36          
  37          } CAL;
  38          
  39          CAL calculator;
  40          
  41          // 超声波
  42          typedef struct {
  43              uint distance;
  44              uint time;
  45          } SONIC;
  46              
  47          SONIC sonic;
  48          
  49          enum {
  50              STATE_TIME = 50,
  51              UART_TIME = 1000,
  52              KEY_TIME = 20,
  53              SONIC_TIME = 100
  54          };
C51 COMPILER V9.60.7.0   MAIN                                                              06/02/2025 19:16:56 PAGE 2   

  55          
  56          
  57          
  58          void task_loop()
  59          {
  60   1          
  61   1          if (state.time == STATE_TIME)
  62   1          {
  63   2              display_task();
  64   2              state.time = 0;
  65   2          }
  66   1      
  67   1          if (uart.time == UART_TIME)
  68   1          {
  69   2              uart_task();
  70   2              uart.time = 0;
  71   2          }
  72   1      
  73   1          if (key.time == KEY_TIME)
  74   1          {
  75   2              key_task();
  76   2              key.time = 0;
  77   2          }
  78   1      
  79   1          if (sonic.time == SONIC_TIME)
  80   1          {
  81   2              sonic_task();
  82   2              sonic.time = 0;
  83   2          }
  84   1      }
  85          
  86          void timer_1_interrupt() interrupt 3
  87          {
  88   1          
  89   1      
  90   1          if ( state.time < STATE_TIME ) { state.time++; }
  91   1      
  92   1          if ( uart.time < UART_TIME ) { uart.time++; }
  93   1      
  94   1          if ( key.time < KEY_TIME ) { key.time++; }
  95   1      
  96   1          if (sonic.time < SONIC_TIME) {sonic.time++; }
  97   1          
  98   1          seg_display();
  99   1      }
 100          
 101          
 102          
 103          
 104          void display_task()
 105          {
 106   1          switch (state.mode_0)
 107   1          {
 108   2              case 0:
 109   2              {
 110   3                  set_seg_value(sonic.distance % 10 / 10 , sonic.distance / 10, 0, 0, 0, 0, 0, 0);
 111   3              }
 112   2              break;
 113   2      
 114   2           
 115   2          }
 116   1      }
C51 COMPILER V9.60.7.0   MAIN                                                              06/02/2025 19:16:56 PAGE 3   

 117          
 118          void uart_task()
 119          {
 120   1          //uart_send(str);
 121   1      }
 122          
 123          
 124          void key_task()
 125          {
 126   1          key.press = key_scan();
 127   1      }
 128          
 129          void sonic_task()
 130          {
 131   1          sonic.distance = measurePCA();
 132   1      }
 133          
 134          
 135          void main()
 136          {
 137   1          
 138   1          char buf[20];  
 139   1      
 140   1          boot_init();
 141   1          uart_send("设备完成了初始化");
 142   1      
 143   1          sprintf(buf, "%.2f\r\n", number);
 144   1          uart_send(buf);
 145   1      
 146   1          while (1)
 147   1          {
 148   2              task_loop();
 149   2          }
 150   1      }
 151          
 152          void boot_init()
 153          {
 154   1          clean_display();
 155   1      
 156   1          Timer1_Init();
 157   1          pcaInit();
 158   1          Uart1_Init();
 159   1          EA = 1;
 160   1      
 161   1          
 162   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    334    ----
   CONSTANT SIZE    =     44    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     20      20
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
