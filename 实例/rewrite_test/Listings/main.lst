C51 COMPILER V9.60.7.0   MAIN                                                              05/21/2025 19:14:58 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE code\main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings
                    -\main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include "main.h"
   2          
   3          
   4          
   5          typedef struct {
   6              uchar time;
   7              uchar mode_0;
   8          } STATE;
   9          
  10          STATE state;
  11          
  12          typedef struct {
  13              uint time;
  14              
  15          } UART;
  16          
  17          code uchar str[] = "ciallo~";
  18          code float number = 0.0721;
  19          UART uart;
  20          
  21          
  22          typedef struct {
  23              uchar time;
  24              uchar press;
  25          } KEY;
  26          
  27          KEY key;
  28          
  29          
  30          enum {
  31              STATE_TIME = 50,
  32              UART_TIME = 1000,
  33              KEY_TIME = 20
  34          };
  35          
  36          
  37          
  38          void task_loop()
  39          {
  40   1          
  41   1          if (state.time == STATE_TIME)
  42   1          {
  43   2              display_task();
  44   2              state.time = 0;
  45   2          }
  46   1      
  47   1          if (uart.time == UART_TIME)
  48   1          {
  49   2              uart_task();
  50   2              uart.time = 0;
  51   2          }
  52   1      
  53   1          if (key.time == KEY_TIME)
  54   1          {
C51 COMPILER V9.60.7.0   MAIN                                                              05/21/2025 19:14:58 PAGE 2   

  55   2              key_task();
  56   2              key.time = 0;
  57   2          }
  58   1      }
  59          
  60          void timer_1_interrupt() interrupt 3
  61          {
  62   1          
  63   1      
  64   1          if ( state.time < STATE_TIME ) { state.time++; }
  65   1      
  66   1          if ( uart.time < UART_TIME ) { uart.time++; }
  67   1      
  68   1          if ( key.time < KEY_TIME ) { key.time++; }
  69   1          
  70   1          seg_display();
  71   1      }
  72          
  73          
  74          
  75          
  76          void display_task()
  77          {
  78   1          switch (state.mode_0)
  79   1          {
  80   2              case 0:
  81   2              {
  82   3                  //set_seg_value(2, 3, 0, 0, 0, 0, 0, 0);
  83   3              }
  84   2              break;
  85   2      
  86   2           
  87   2          }
  88   1      }
  89          
  90          void uart_task()
  91          {
  92   1          //uart_send(str);
  93   1      }
  94          
  95          
  96          void key_task()
  97          {
  98   1          key.press = key_scan();
  99   1      
 100   1          switch (key.press)
 101   1          {
 102   2              case 4:
 103   2              {
 104   3                  set_seg_value(4, 0, 0, 0, 0, 0, 0, 0);
 105   3              }
 106   2              break;
 107   2      
 108   2              case 5:
 109   2              {
 110   3                  set_seg_value(5, 0, 0, 0, 0, 0, 0, 0);
 111   3              }
 112   2              break;
 113   2          }
 114   1      }
 115          
 116          
C51 COMPILER V9.60.7.0   MAIN                                                              05/21/2025 19:14:58 PAGE 3   

 117          
 118          
 119          void main()
 120          {
 121   1          
 122   1          char buf[20];  
 123   1      
 124   1          boot_init();
 125   1          uart_send("设备完成了初始化");
 126   1      
 127   1          sprintf(buf, "%.2f\r\n", number);
 128   1          uart_send(buf);
 129   1      
 130   1          while (1)
 131   1          {
 132   2              task_loop();
 133   2          }
 134   1      }
 135          
 136          void boot_init()
 137          {
 138   1          clean_display();
 139   1      
 140   1          
 141   1          Timer1_Init();
 142   1          Uart1_Init();
 143   1          EA = 1;
 144   1      
 145   1          
 146   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    283    ----
   CONSTANT SIZE    =     44    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      6      20
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
