C51 COMPILER V9.60.7.0   IIC                                                               04/12/2025 10:05:03 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE IIC
OBJECT MODULE PLACED IN .\Objects\iic.obj
COMPILER INVOKED BY: D:\Program Files\keil5\C51\BIN\C51.EXE code\iic.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT
                    -(.\Listings\iic.lst) TABS(2) OBJECT(.\Objects\iic.obj)

line level    source

   1          #include "iic.h"
   2          
   3          sbit scl = P2 ^ 0;
   4          sbit sda = P2 ^ 1;
   5          
   6          
   7          #define DELAY_TIME  10
   8          
   9          //
  10          static void I2C_Delay(unsigned char n)
  11          {
  12   1          do
  13   1          {
  14   2              _nop_();_nop_();_nop_();_nop_();_nop_();
  15   2              _nop_();_nop_();_nop_();_nop_();_nop_();
  16   2              _nop_();_nop_();_nop_();_nop_();_nop_();    
  17   2          }
  18   1          while(n--);       
  19   1      }
  20          
  21          //
  22          void I2CStart(void)
  23          {
  24   1          sda = 1;
  25   1          scl = 1;
  26   1        I2C_Delay(DELAY_TIME);
  27   1          sda = 0;
  28   1        I2C_Delay(DELAY_TIME);
  29   1          scl = 0;    
  30   1      }
  31          
  32          //
  33          void I2CStop(void)
  34          {
  35   1          sda = 0;
  36   1          scl = 1;
  37   1        I2C_Delay(DELAY_TIME);
  38   1          sda = 1;
  39   1        I2C_Delay(DELAY_TIME);
  40   1      }
  41          
  42          //
  43          void I2CSendByte(unsigned char byt)
  44          {
  45   1          unsigned char i;
  46   1        
  47   1          for(i=0; i<8; i++){
  48   2              scl = 0;
  49   2          I2C_Delay(DELAY_TIME);
  50   2              if(byt & 0x80){
  51   3                  sda = 1;
  52   3              }
  53   2              else{
  54   3                  sda = 0;
C51 COMPILER V9.60.7.0   IIC                                                               04/12/2025 10:05:03 PAGE 2   

  55   3              }
  56   2          I2C_Delay(DELAY_TIME);
  57   2              scl = 1;
  58   2              byt <<= 1;
  59   2          I2C_Delay(DELAY_TIME);
  60   2          }
  61   1        
  62   1          scl = 0;  
  63   1      }
  64          
  65          //
  66          unsigned char I2CReceiveByte(void)
  67          {
  68   1        unsigned char da;
  69   1        unsigned char i;
  70   1        for(i=0;i<8;i++){   
  71   2          scl = 1;
  72   2          I2C_Delay(DELAY_TIME);
  73   2          da <<= 1;
  74   2          if(sda) 
  75   2            da |= 0x01;
  76   2          scl = 0;
  77   2          I2C_Delay(DELAY_TIME);
  78   2        }
  79   1        return da;    
  80   1      }
  81          
  82          //
  83          unsigned char I2CWaitAck(void)
  84          {
  85   1        unsigned char ackbit;
  86   1        
  87   1          scl = 1;
  88   1        I2C_Delay(DELAY_TIME);
  89   1          ackbit = sda; 
  90   1          scl = 0;
  91   1        I2C_Delay(DELAY_TIME);
  92   1        
  93   1        return ackbit;
  94   1      }
  95          
  96          //
  97          void I2CSendAck(unsigned char ackbit)
  98          {
  99   1          scl = 0;
 100   1          sda = ackbit; 
 101   1        I2C_Delay(DELAY_TIME);
 102   1          scl = 1;
 103   1        I2C_Delay(DELAY_TIME);
 104   1          scl = 0; 
 105   1        sda = 1;
 106   1        I2C_Delay(DELAY_TIME);
 107   1      }
 108          
 109          // 0x01 光敏 0x03 旋钮
 110          uchar ADC(uchar channel)
 111          {
 112   1          uchar adc;
 113   1      
 114   1          I2CStart();
 115   1      
 116   1          I2CSendByte(0x90);
C51 COMPILER V9.60.7.0   IIC                                                               04/12/2025 10:05:03 PAGE 3   

 117   1          I2CWaitAck();
 118   1      
 119   1          I2CSendByte(channel);
 120   1          I2CWaitAck();
 121   1      
 122   1          I2CStart();
 123   1      
 124   1          I2CSendByte(0x91);
 125   1          I2CWaitAck();
 126   1      
 127   1          adc = I2CReceiveByte();
 128   1          I2CSendAck(1);
 129   1      
 130   1          I2CStop();
 131   1        
 132   1            return adc;
 133   1      }
 134          
 135          void DAC(uchar value)
 136          {
 137   1          I2CStart();
 138   1      
 139   1          I2CSendByte(0x90);
 140   1          I2CWaitAck();
 141   1      
 142   1          I2CSendByte(0x40);
 143   1          I2CWaitAck();
 144   1      
 145   1          I2CSendByte(value);
 146   1          I2CWaitAck();
 147   1      
 148   1          I2CStop();
 149   1      }
 150          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    237    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
