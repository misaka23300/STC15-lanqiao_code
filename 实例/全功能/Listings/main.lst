C51 COMPILER V9.60.7.0   MAIN                                                              04/12/2025 10:04:02 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\Program Files\keil5\C51\BIN\C51.EXE code\main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRIN
                    -T(.\Listings\main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include "main.h"
   2          
   3          enum {
   4              LED_TIME = 7,
   5              KEY_TIME = 20,
   6              DATE_TIME = 100,
   7              STATE_TIME = 200,
   8              ADC_TIME = 150
   9          };
  10          
  11          // key
  12          idata uint key_time;
  13          uchar key_press;
  14          
  15          
  16          // state
  17          idata uint state_time;
  18          uchar state_mode1;
  19          uchar state_only;
  20          
  21          // 时间
  22          idata uint date_time;
  23          // uchar now_time[3];
  24          
  25          
  26          // led
  27          idata uint led_time;
  28          
  29          // ADC
  30          idata uint adc_time;
  31          uchar adc_1;
  32          uchar adc_3;
  33          
  34          uint adc_3_value;
  35          bit is_3_flag;
  36          
  37          
  38          void adc_proc()
  39          {
  40   1         
  41   1          if (is_3_flag)
  42   1          {
  43   2              adc_1 = ADC(0x03);
  44   2              is_3_flag = 0;
  45   2          }
  46   1          else
  47   1          {
  48   2             adc_3 = ADC(0x01); 
  49   2             is_3_flag = 1;
  50   2              
  51   2             adc_3_value = (uint) (adc_3 * 19.6);
  52   2             // adc_3_value = adc_3_value * 100; // 取2位小数
  53   2      
  54   2             if ((adc_3_value % 10) > 5)
C51 COMPILER V9.60.7.0   MAIN                                                              04/12/2025 10:04:02 PAGE 2   

  55   2             {
  56   3                  adc_3_value = (adc_3_value / 10) + 1;
  57   3             }
  58   2          }
  59   1          
  60   1      
  61   1      
  62   1      }
  63          
  64          
  65          void ds1302_proc()
  66          {
  67   1          date_read();
  68   1      }
  69          
  70          void key_proc()
  71          {
  72   1          key_press = key_scan();
  73   1          switch (key_press)
  74   1          {
  75   2              case 4: 
  76   2              {
  77   3                  switch (state_mode1)
  78   3                  {
  79   4                      case 0: { state_mode1 = 1; break; }
  80   4                      case 1: { state_mode1 = 2; break; }
  81   4                      case 2: { state_mode1 = 0; break; }
  82   4                  }
  83   3              }
  84   2              break;
  85   2      
  86   2              case 5:
  87   2              {
  88   3                 
  89   3              }
  90   2              break;
  91   2          }
  92   1      }
  93          
  94          void state_proc()
  95          {
  96   1          switch (state_mode1)
  97   1          {
  98   2              case 0: 
  99   2              {
 100   3                  seg[0] = key_press / 10 % 10;
 101   3                  seg[1] = key_press % 10;
 102   3      
 103   3                  seg[2] = 16;
 104   3                  seg[3] = 16;
 105   3                  seg[4] = 16;
 106   3                  seg[5] = 16;
 107   3                  seg[6] = 16;
 108   3                  seg[7] = 16;
 109   3              }
 110   2              break;
 111   2      
 112   2              case 1:
 113   2              {
 114   3                  if (state_only != 1)
 115   3                  {
 116   4                      state_only = 1;
C51 COMPILER V9.60.7.0   MAIN                                                              04/12/2025 10:04:02 PAGE 3   

 117   4                      seg[2] = 17; seg[5] = 17;
 118   4                  }
 119   3      
 120   3                  seg[0] = time_now[2] / 10 % 10;
 121   3                  seg[1] = time_now[2] % 10;
 122   3      
 123   3                  seg[3] = time_now[1] / 10 % 10;
 124   3                  seg[4] = time_now[1] % 10;
 125   3      
 126   3                  seg[6] = time_now[0] / 10 % 10;
 127   3                  seg[7] = time_now[0] % 10;
 128   3              }
 129   2              break;
 130   2      
 131   2              case 2:
 132   2              {
 133   3                  // x x x 0     0 x x x
 134   3                  // 
 135   3                  if (state_only != 2)
 136   3                  {
 137   4                      seg[3] = 16; seg[4] = 16;
 138   4                  }
 139   3                  
 140   3      
 141   3                  seg[0] = adc_1 / 100 % 10;
 142   3                  seg[1] = adc_1 / 10 % 10;
 143   3                  seg[2] = adc_1 % 10;
 144   3      
 145   3                  seg[5] = (adc_3_value / 100 % 10) + 32;
 146   3                  seg[6] = adc_3_value / 10 % 10;
 147   3                  seg[7] = adc_3_value % 10;
 148   3              }
 149   2              break;
 150   2          }
 151   1      }
 152          
 153          void main()
 154          {
 155   1          boot_init();
 156   1          date_write();
 157   1          ADC(0x01);
 158   1          while (1)
 159   1          {
 160   2              if (led_time == LED_TIME)
 161   2              {
 162   3                  led_display();
 163   3                  led_time = 0;
 164   3              }
 165   2      
 166   2              if (key_time == KEY_TIME)
 167   2              {
 168   3                  key_proc();
 169   3                  key_time = 0;
 170   3              }
 171   2              
 172   2              if (state_time == STATE_TIME)
 173   2              {
 174   3                  state_proc();
 175   3                  state_time = 0;
 176   3              }
 177   2      
 178   2              if (date_time == DATE_TIME)
C51 COMPILER V9.60.7.0   MAIN                                                              04/12/2025 10:04:02 PAGE 4   

 179   2              {
 180   3                  ds1302_proc();
 181   3                  date_time = 0;
 182   3              }
 183   2      
 184   2              if (adc_time == ADC_TIME)
 185   2              {
 186   3                  adc_proc();
 187   3                  adc_time = 0;
 188   3              }
 189   2          }
 190   1      }
 191          
 192          void Timer1_Isr(void) interrupt 3
 193          {
 194   1          seg_display();
 195   1      
 196   1          if (led_time < LED_TIME) { led_time++; }
 197   1      
 198   1          if (key_time < KEY_TIME) { key_time++; }
 199   1      
 200   1          if (state_time < STATE_TIME) { state_time++; }
 201   1      
 202   1          if (date_time < DATE_TIME) { date_time++; }
 203   1      
 204   1          if (adc_time < ADC_TIME) { adc_time++; }
 205   1          
 206   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    623    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      7    ----
   IDATA SIZE       =     10    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
