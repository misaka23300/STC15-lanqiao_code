C51 COMPILER V9.60.7.0   MAIN                                                              04/10/2025 20:39:44 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\Program Files\keil5\C51\BIN\C51.EXE code\main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRIN
                    -T(.\Listings\main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include "main.h"
   2          
   3          enum {
   4              LED_TIME = 7,
   5              KEY_TIME = 20,
   6              DATE_TIME = 100,
   7              STATE_TIME = 200
   8          };
   9          
  10          // key
  11          idata uint key_time;
  12          uchar key_press;
  13          
  14          
  15          // state
  16          idata uint state_time;
  17          uchar state_mode1;
  18          uchar state_only;
  19          
  20          // 时间
  21          idata uint date_time;
  22          // uchar now_time[3];
  23          
  24          
  25          // led
  26          idata uint led_time;
  27          
  28          void ds1302_proc()
  29          {
  30   1          date_read();
  31   1      }
  32          
  33          void key_proc()
  34          {
  35   1          key_press = key_scan();
  36   1          switch (key_press)
  37   1          {
  38   2              case 4: 
  39   2              {
  40   3                  switch (state_mode1)
  41   3                  {
  42   4                      case 0: { state_mode1 = 1; break; }
  43   4                      case 1: { state_mode1 = 2; break; }
  44   4                      case 2: { state_mode1 = 0; break; }
  45   4                  }
  46   3              }
  47   2              break;
  48   2      
  49   2              case 5:
  50   2              {
  51   3                 
  52   3              }
  53   2              break;
  54   2          }
C51 COMPILER V9.60.7.0   MAIN                                                              04/10/2025 20:39:44 PAGE 2   

  55   1      }
  56          
  57          void state_proc()
  58          {
  59   1          switch (state_mode1)
  60   1          {
  61   2              case 0: 
  62   2              {
  63   3                  seg[0] = key_press / 10 % 10;
  64   3                  seg[1] = key_press % 10;
  65   3              }
  66   2              break;
  67   2      
  68   2              case 1:
  69   2              {
  70   3                  if (state_only != 1)
  71   3                  {
  72   4                      state_only = 1;
  73   4                      seg[2] = 17; seg[5] = 17;
  74   4                  }
  75   3      
  76   3                  seg[0] = time_now[2] / 10 % 10;
  77   3                  seg[1] = time_now[2] % 10;
  78   3      
  79   3                  seg[3] = time_now[1] / 10 % 10;
  80   3                  seg[4] = time_now[1] % 10;
  81   3      
  82   3                  seg[6] = time_now[0] / 10 % 10;
  83   3                  seg[7] = time_now[0] % 10;
  84   3              }
  85   2              break;
  86   2          }
  87   1      }
  88          
  89          void main()
  90          {
  91   1          boot_init();
  92   1          date_write();
  93   1          while (1)
  94   1          {
  95   2              if (led_time == LED_TIME)
  96   2              {
  97   3                  led_display();
  98   3                  led_time = 0;
  99   3              }
 100   2      
 101   2              if (key_time == KEY_TIME)
 102   2              {
 103   3                  key_proc();
 104   3                  key_time = 0;
 105   3              }
 106   2              
 107   2              if (state_time == STATE_TIME)
 108   2              {
 109   3                  state_proc();
 110   3                  state_time = 0;
 111   3              }
 112   2      
 113   2              if (date_time == DATE_TIME)
 114   2              {
 115   3                  ds1302_proc();
 116   3                  date_time = 0;
C51 COMPILER V9.60.7.0   MAIN                                                              04/10/2025 20:39:44 PAGE 3   

 117   3              }
 118   2          }
 119   1      }
 120          
 121          void Timer1_Isr(void) interrupt 3
 122          {
 123   1          seg_display();
 124   1      
 125   1          if (led_time < LED_TIME) { led_time++; }
 126   1      
 127   1          if (key_time < KEY_TIME) { key_time++; }
 128   1      
 129   1          if (state_time < STATE_TIME) { state_time++; }
 130   1      
 131   1          if (date_time < DATE_TIME) { date_time++; }
 132   1      
 133   1      
 134   1          
 135   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    364    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      3    ----
   IDATA SIZE       =      8    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
