C51 COMPILER V9.60.7.0   MAIN                                                              04/07/2025 20:51:46 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\Program Files\keil5\C51\BIN\C51.EXE code\main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRIN
                    -T(.\Listings\main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include "main.h"
   2          
   3          extern uchar led[8];
   4          extern uchar seg[8];
   5          
   6          
   7          // ds1302   -> date
   8          struct {
   9              uchar now_time[3];
  10              uint time;
  11              uchar init_time[3];
  12          } date;
  13          
  14          
  15          // 数码管显示数据 -> state
  16          struct {
  17              uint time;
  18              uchar mode1;
  19              uchar only;
  20          } state;
  21          
  22          
  23          // 数据界面 -> ADC数据
  24          struct {
  25              uint light_value;
  26              uint RB2_value;
  27          } adc;
  28          
  29          
  30          // 查询界面 -> 数组
  31          struct {
  32              uchar value[3];
  33              uchar index;
  34          } search;
  35          
  36          
  37          // 键盘 -> press time
  38          struct {
  39              uchar press;
  40              uint time;
  41          } key;
  42          
  43          
  44          enum {
  45              DATE_TIME = 100,
  46              STATE_TIME = 90,
  47              KEY_TIME = 1000
  48          };
  49          
  50          void main()
  51          {
  52   1          boot_init(); 
  53   1          led[0] = 1;
  54   1          state.only = 2;
C51 COMPILER V9.60.7.0   MAIN                                                              04/07/2025 20:51:46 PAGE 2   

  55   1          state.mode1 = 0;
  56   1      
  57   1          date.init_time[0] = 50;
  58   1          date.init_time[1] = 59;
  59   1          date.init_time[2] = 23;
  60   1      
  61   1          write_datetime(date.init_time);
  62   1      
  63   1          //state_proc();
  64   1      
  65   1          while (1)
  66   1          {
  67   2             led[7] = 1;
  68   2              if (date.time == DATE_TIME)
  69   2              {
  70   3                  //led[2]= 0;
  71   3                  ds1302_proc();
  72   3                  date.time = 0;
  73   3              }
  74   2      
  75   2              if (state.time == STATE_TIME)
  76   2              {
  77   3                  state_proc();
  78   3                  state.time = 0;
  79   3              }
  80   2      
  81   2              if (key.time == KEY_TIME)
  82   2              {
  83   3                  key_proc();
  84   3                  key.time = 0;
  85   3              }
  86   2              led[7] = 0;
  87   2          }
  88   1      }
  89          
  90          void Timer1_Isr() interrupt 12
  91          {
  92   1          seg_display();
  93   1          led_display();
  94   1      
  95   1          if (date.time < DATE_TIME) { date.time++; }
  96   1      
  97   1          if (state.time < STATE_TIME) { state.time++; }
  98   1      
  99   1          if (key.time < KEY_TIME) { key.time++; }
 100   1      
 101   1      
 102   1      }
 103          
 104          
 105          
 106          void ds1302_proc()
 107          {
 108   1          led[1] = 1;
 109   1          read_datatime(date.now_time);
 110   1          led[1] = 0;
 111   1      }
 112          
 113          void state_proc()
 114          {
 115   1          switch (state.mode1)
 116   1          {
C51 COMPILER V9.60.7.0   MAIN                                                              04/07/2025 20:51:46 PAGE 3   

 117   2              case 0: 
 118   2              {
 119   3                  // 时间界面
 120   3                  if (state.only != 0)
 121   3                  {
 122   4                      state.only = 0;
 123   4                      seg[2] = 17; seg[5] = 17; 
 124   4                  }
 125   3                  // 小时
 126   3                  seg[0] = date.now_time[2] / 10 % 10;
 127   3                  seg[1] = date.now_time[2] % 10;
 128   3                  // 分钟
 129   3                  seg[3] = date.now_time[1] / 10 % 10;
 130   3                  seg[4] = date.now_time[1] % 10;
 131   3                  // 秒
 132   3                  seg[6] = date.now_time[0] / 10 % 10;
 133   3                  seg[7] = date.now_time[0] % 10;
 134   3              }
 135   2              break;
 136   2      
 137   2              // 数据界面 P g. g g  U v. v v     g -> 光敏电阻   v -> 旋钮电压 
 138   2              /* case 1:
 139   2              {
 140   2                  if (state.only != 2)
 141   2                  {
 142   2                      state.only = 2;
 143   2                      seg[0] = 24; seg[4] = 25;
 144   2                  }
 145   2      
 146   2                  seg[1] = adc.light_value / 100 % 10;
 147   2                  seg[2] = (adc.light_value / 10 % 10) + 32;
 148   2                  seg[3] = adc.light_value % 10;
 149   2                  
 150   2                  seg[5] = adc.RB2_value / 100 % 10;
 151   2                  seg[6] = (adc.RB2_value / 10 % 10) + 32;
 152   2                  seg[7] = adc.RB2_value % 10;
 153   2              }
 154   2              break;
 155   2      
 156   2              case 2:
 157   2              {
 158   2                  if (state.only != 2)
 159   2                  {
 160   2                      state.only = 2;
 161   2                      seg[0] = 42;
 162   2                  }
 163   2                  seg[1] = search.index;
 164   2                  //seg[2] = 
 165   2              }
 166   2              break; */
 167   2              
 168   2          }
 169   1      }
 170          
 171          void ADC_proc()
 172          {
 173   1          adc.light_value = ( ADC(0x01) / 255)* 500;
 174   1          adc.RB2_value = ( ADC(0x03) / 255)* 500;
 175   1      }
 176          
 177          
 178          void search_proc()
C51 COMPILER V9.60.7.0   MAIN                                                              04/07/2025 20:51:46 PAGE 4   

 179          {
 180   1      
 181   1      }
 182          
 183          void key_proc()
 184          {
 185   1          key.press = key_scan();
 186   1      
 187   1          switch (key.press)
 188   1          {
 189   2              case 4:
 190   2              {                                      
 191   3                  //state.mode1 = (state.mode1 + 1) % 3;
 192   3              }
 193   2              break;
 194   2          }
 195   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    362    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     23    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
