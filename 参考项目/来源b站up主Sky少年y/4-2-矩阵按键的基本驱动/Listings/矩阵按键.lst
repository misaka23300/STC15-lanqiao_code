C51 COMPILER V9.54   ________                                                              01/25/2025 21:24:31 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE ________
OBJECT MODULE PLACED IN .\Objects\矩阵按键.obj
COMPILER INVOKED BY: E:\SoftWareProgrom\keli\C51\BIN\C51.EXE 矩阵按键.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRIN
                    -T(.\Listings\矩阵按键.lst) TABS(2) OBJECT(.\Objects\矩阵按键.obj)

line level    source

   1          #include <STC15F2K60S2.H>
   2          #include "intrins.h"
   3          
   4          #define uchar unsigned char
   5          #define uint unsigned int
   6          
   7          uchar shu=0;
   8          
   9          code unsigned char DuanMa[]={0xc0,0xf9,0xa4,0xb0,0x99,
  10          0x92,0x82,0xf8,0x80,0x90,0xbf,0xff};   //对应着0-9和-共11个字符加上全灭
  11          
  12          //延时1ms的函数
  13          void Delay1ms(void) //@11.0592MHz
  14          {
  15   1        unsigned char data i, j;
  16   1      
  17   1        _nop_();
  18   1        _nop_();
  19   1        _nop_();
  20   1        i = 11;
  21   1        j = 190;
  22   1        do
  23   1        {
  24   2          while (--j);
  25   2        } while (--i);
  26   1      }
  27          
  28          
  29          
  30          void delay(uint t)
  31          {
  32   1        while(t--)Delay1ms();
  33   1      }
  34          
  35          
  36          //573锁存器的控制
  37          void control(char x,y)
  38          {
  39   1        switch(x)
  40   1        {
  41   2          case 4:P2=(P2 & 0x1f)|0x80;break;   //Y4C为高电平
  42   2          case 5:P2=(P2 & 0x1f)|0xa0;break;   //5
  43   2          case 6:P2=(P2 & 0x1f)|0xc0;break;
  44   2          case 7:P2=(P2 & 0x1f)|0xe0;break;
  45   2        }
  46   1        P0=y;
  47   1        P2 &= 0x1f;   //P2 = P2 & 0x1f;
  48   1      }
  49          
  50          
  51          
  52          
  53          
  54          //单个数码管显示函数
C51 COMPILER V9.54   ________                                                              01/25/2025 21:24:31 PAGE 2   

  55          void aloneSMG(char pos,value)     
  56          {
  57   1        control(7,0xff);         //消影
  58   1        control(6,0x01<<pos);    //位选 x=0 x=7
  59   1        control(7,DuanMa[value]);//段码
  60   1        delay(1);
  61   1      }
  62          
  63          //独立按键操作2
  64          uchar Key_Read()       //读取键值的函数
  65          {
  66   1        uint Key_New;
  67   1        uchar key_value=0;
  68   1        
  69   1        P44=0;P42=1;P35=1;P34=1;  //扫描第一列
  70   1        Key_New = P3 & 0x0f;      //获取第一列的四行的位置的二进制数值
  71   1        
  72   1        P44=1;P42=0;P35=1;P34=1;  //扫描第2列
  73   1        Key_New = (Key_New<<4) | (P3 & 0x0f);
  74   1        
  75   1        P44=1;P42=1;P35=0;P34=1;  //扫描第3列
  76   1        Key_New = (Key_New<<4) | (P3 & 0x0f);
  77   1        
  78   1        P44=1;P42=1;P35=1;P34=0;  //扫描第4列
  79   1        Key_New = (Key_New<<4) | (P3 & 0x0f);
  80   1        
  81   1        switch(~Key_New)
  82   1        {
  83   2          case 0x8000:key_value=4;break;  //S4
  84   2          case 0x4000:key_value=5;break;  //S5
  85   2          case 0x2000:key_value=6;break;  //S6
  86   2          case 0x1000:key_value=7;break;  //S7
  87   2          
  88   2          case 0x0800:key_value=8;break;  //S8
  89   2          case 0x0400:key_value=9;break;  //S9
  90   2          case 0x0200:key_value=10;break;  //S10
  91   2          case 0x0100:key_value=11;break;  //S11
  92   2          
  93   2          case 0x0080:key_value=12;break;  //S12
  94   2          case 0x0040:key_value=13;break;  //S13
  95   2          case 0x0020:key_value=14;break;  //S14
  96   2          case 0x0010:key_value=15;break;  //S15
  97   2          
  98   2          case 0x0008:key_value=16;break;  //S16
  99   2          case 0x0004:key_value=17;break;  //S17
 100   2          case 0x0002:key_value=18;break;  //S18
 101   2          case 0x0001:key_value=19;break;  //S19
 102   2          
 103   2          default :key_value=0;break;
 104   2        }
 105   1        return key_value;
 106   1      }
 107          
 108          void Key_pro()
 109          {
 110   1        uchar ucKey_Val,ucKey_Down,ucKey_Up,ucKey_old;
 111   1        ucKey_Val = Key_Read();                         //7
 112   1        ucKey_Down = ucKey_Val & (ucKey_old ^ ucKey_Val);
 113   1        ucKey_Up = ~ucKey_Val & (ucKey_old ^ ucKey_Val);
 114   1        ucKey_old = ucKey_Val;
 115   1        
 116   1        switch(ucKey_Down)
C51 COMPILER V9.54   ________                                                              01/25/2025 21:24:31 PAGE 3   

 117   1        {
 118   2          case 4:shu=4;break;
 119   2          case 5:shu=5;break;
 120   2          case 6:shu=6;break;
 121   2          case 7:shu=7;break;
 122   2          
 123   2          case 8:shu=8;break;
 124   2          case 9:shu=9;break;
 125   2          case 10:shu=10;break;
 126   2          case 11:shu=11;break;
 127   2          
 128   2          case 12:shu=12;break;
 129   2          case 13:shu=13;break;
 130   2          case 14:shu=14;break;
 131   2          case 15:shu=15;break;
 132   2          
 133   2          case 16:shu=16;break;
 134   2          case 17:shu=17;break;
 135   2          case 18:shu=18;break;
 136   2          case 19:shu=19;break;
 137   2        }
 138   1        
 139   1      }
 140          
 141          
 142          //主函数
 143          void main()
 144          {
 145   1        while(1)
 146   1        {
 147   2          if(shu>=10)
 148   2          {
 149   3            aloneSMG(6,shu/10);
 150   3          }
 151   2          else aloneSMG(6,11);
 152   2          aloneSMG(7,shu%10);
 153   2          
 154   2          Key_pro();
 155   2        }
 156   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    625    ----
   CONSTANT SIZE    =     12    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      1       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
