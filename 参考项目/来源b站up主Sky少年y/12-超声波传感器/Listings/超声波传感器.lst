C51 COMPILER V9.54   ____________                                                          02/17/2025 16:17:22 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE ____________
OBJECT MODULE PLACED IN .\Objects\超声波传感器.obj
COMPILER INVOKED BY: E:\SoftWareProgrom\keli\C51\BIN\C51.EXE 超声波传感器.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND 
                    -PRINT(.\Listings\超声波传感器.lst) TABS(2) OBJECT(.\Objects\超声波传感器.obj)

line level    source

   1          #include <STC15F2K60S2.H>
   2          #include "intrins.h"
   3          #define uchar unsigned char
   4          #define uint unsigned int
   5          
   6          sbit TX=P1^0;
   7          sbit RX=P1^1;
   8          
   9          code unsigned char DuanMa[]={0xc0,0xf9,0xa4,0xb0,0x99,
  10          0x92,0x82,0xf8,0x80,0x90,0xbf,0xff};   //对应着0-9和-共11个字符加上全灭
  11          
  12          uchar SMGa[8]={11,11,11,11,11,11,11,11};  //SMGa[0]
  13          
  14          
  15          void control(char x,y)
  16          {
  17   1        switch(x)
  18   1        {
  19   2          case 4:P2=(P2 & 0x1f)|0x80;break;   //Y4C为高电平
  20   2          case 5:P2=(P2 & 0x1f)|0xa0;break;   //5
  21   2          case 6:P2=(P2 & 0x1f)|0xc0;break;
  22   2          case 7:P2=(P2 & 0x1f)|0xe0;break;
  23   2        }
  24   1        P0=y;
  25   1        P2 &= 0x1f;   //P2 = P2 & 0x1f;
  26   1      }
  27          
  28          
  29          
  30          void aloneSMG(char pos,value)   //单个数码管显示   
  31          {
  32   1        control(7,0xff);         //消影
  33   1        control(6,0x01<<pos);    //位选 x=0 x=7
  34   1        control(7,DuanMa[value]);//段码
  35   1      }
  36          
  37          void T_Reset()
  38          {
  39   1        AUXR &= 0x7F;     //定时器时钟12T模式
  40   1        TMOD &= 0xF0;     //设置定时器模式
  41   1        TL0 = 0x18;       //设置定时初始值
  42   1        TH0 = 0xFC;       //设置定时初始值        //设置定时初始值
  43   1        TF0 = 0;
  44   1        TR0 = 1;
  45   1        ET0 = 1;//打开对应的中断
  46   1        EA = 1;
  47   1      }
  48          uchar SMGi=0;   //0-7     
  49          
  50          //矩阵按键操作
  51          uchar Key_Delay=0;
  52          uchar Wave_Delay=0;
  53          uchar Key_Read()       //读取键值的函数
  54          {
C51 COMPILER V9.54   ____________                                                          02/17/2025 16:17:22 PAGE 2   

  55   1        uint Key_New;
  56   1        uchar key_value=0;
  57   1        
  58   1        P44=0;P42=1;P35=1;P34=1;  //扫描第一列
  59   1        Key_New = P3 & 0x0f;      //获取第一列的四行的位置的二进制数值
  60   1        
  61   1        P44=1;P42=0;P35=1;P34=1;  //扫描第2列
  62   1        Key_New = (Key_New<<4) | (P3 & 0x0f);
  63   1        
  64   1        P44=1;P42=1;P35=0;P34=1;  //扫描第3列
  65   1        Key_New = (Key_New<<4) | (P3 & 0x0f);
  66   1        
  67   1        P44=1;P42=1;P35=1;P34=0;  //扫描第4列
  68   1        Key_New = (Key_New<<4) | (P3 & 0x0f);
  69   1        
  70   1        switch(~Key_New)
  71   1        {
  72   2          case 0x8000:key_value=4;break;  //S4
  73   2          case 0x4000:key_value=5;break;  //S5
  74   2          case 0x2000:key_value=6;break;  //S6
  75   2          case 0x1000:key_value=7;break;  //S7
  76   2          
  77   2          case 0x0800:key_value=8;break;  //S8
  78   2          case 0x0400:key_value=9;break;  //S9
  79   2          case 0x0200:key_value=10;break;  //S10
  80   2          case 0x0100:key_value=11;break;  //S11
  81   2          
  82   2          case 0x0080:key_value=12;break;  //S12
  83   2          case 0x0040:key_value=13;break;  //S13
  84   2          case 0x0020:key_value=14;break;  //S14
  85   2          case 0x0010:key_value=15;break;  //S15
  86   2          
  87   2          case 0x0008:key_value=16;break;  //S16
  88   2          case 0x0004:key_value=17;break;  //S17
  89   2          case 0x0002:key_value=18;break;  //S18
  90   2          case 0x0001:key_value=19;break;  //S19
  91   2          
  92   2          default :key_value=0;break;
  93   2        }
  94   1        return key_value;
  95   1      }
  96          
  97          void Key_pro()
  98          {
  99   1        uchar ucKey_Val,ucKey_Down,ucKey_Up,ucKey_old;
 100   1        if(Key_Delay<9)return;
 101   1        ucKey_Val = Key_Read();                         //7
 102   1        ucKey_Down = ucKey_Val & (ucKey_old ^ ucKey_Val);
 103   1        ucKey_Up = ~ucKey_Val & (ucKey_old ^ ucKey_Val);
 104   1        ucKey_old = ucKey_Val;
 105   1        
 106   1        switch(ucKey_Down)
 107   1        {
 108   2          
 109   2        }
 110   1      }
 111          
 112          void T1_Server() interrupt 1    //每次执行函数就是1ms     T1
 113          {
 114   1        aloneSMG(SMGi,SMGa[SMGi]);    //SMGa[0] SMGa[1]   ----   SMGa[7]
 115   1        if(++SMGi==8)SMGi=0; 
 116   1        if(++Key_Delay==10)Key_Delay=0;
C51 COMPILER V9.54   ____________                                                          02/17/2025 16:17:22 PAGE 3   

 117   1        if(++Wave_Delay==200)Wave_Delay=0;
 118   1      }
 119          
 120          uchar Distance=0;
 121          void Delay12us(void)  //@12.000MHz
 122          {
 123   1        unsigned char data i;
 124   1      
 125   1        _nop_();
 126   1        _nop_();
 127   1        i = 33;
 128   1        while (--i);
 129   1      }
 130          
 131          
 132          uchar Get_Distance()  //单位cm
 133          {
 134   1        uint time_Dis=0;
 135   1        uchar i=0;
 136   1        CMOD=0x01;
 137   1        CCON=0x00;
 138   1        CH=0x00;CL=0x00;
 139   1        for(i=0;i<=7;i++)
 140   1        {
 141   2          TX=1;
 142   2          Delay12us();
 143   2          TX=0;
 144   2          Delay12us();
 145   2        }
 146   1        CR=1;
 147   1        while((RX==1)&&(CH<0x40));
 148   1        CR=0;
 149   1        if(CH>=0x40)
 150   1        {
 151   2          CF=0;
 152   2          return 0;
 153   2        }
 154   1        else
 155   1        {
 156   2          time_Dis = (CH<<8)|CL;
 157   2          return (time_Dis * 0.0172);
 158   2        }
 159   1      }
 160          
 161          void main()
 162          {
 163   1        T_Reset();
 164   1        while(1)
 165   1        {
 166   2          if(Wave_Delay==199)Distance=Get_Distance();
 167   2          Key_pro();
 168   2          
 169   2          SMGa[0]=11;
 170   2          SMGa[1]=11;
 171   2          SMGa[2]=11;
 172   2          SMGa[3]=11;
 173   2          SMGa[4]=11;
 174   2          SMGa[5]=Distance/100%10;
 175   2          SMGa[6]=Distance/10%10;
 176   2          SMGa[7]=Distance%10;
 177   2        }
 178   1      }
C51 COMPILER V9.54   ____________                                                          02/17/2025 16:17:22 PAGE 4   



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    677    ----
   CONSTANT SIZE    =     12    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     12       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
