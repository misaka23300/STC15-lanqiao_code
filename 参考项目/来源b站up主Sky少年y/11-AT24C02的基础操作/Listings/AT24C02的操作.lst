C51 COMPILER V9.54   AT24C02______                                                         02/16/2025 20:24:27 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE AT24C02______
OBJECT MODULE PLACED IN .\Objects\AT24C02的操作.obj
COMPILER INVOKED BY: E:\SoftWareProgrom\keli\C51\BIN\C51.EXE AT24C02的操作.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND
                    - PRINT(.\Listings\AT24C02的操作.lst) TABS(2) OBJECT(.\Objects\AT24C02的操作.obj)

line level    source

   1          #include <STC15F2K60S2.H>
   2          #include "iic.h"
   3          
   4          #define uchar unsigned char
   5          #define uint unsigned int
   6          
   7          uchar AT24C02_Data[2]={0,0};
   8          uchar shua=50,shub=50;
   9          code unsigned char DuanMa[]={0xc0,0xf9,0xa4,0xb0,0x99,
  10          0x92,0x82,0xf8,0x80,0x90,0xbf,0xff};   //对应着0-9和-共11个字符加上全灭
  11          
  12          uchar SMGa[8]={11,11,11,11,11,11,11,11};  //SMGa[0]
  13          
  14          void control(char x,y)
  15          {
  16   1        switch(x)
  17   1        {
  18   2          case 4:P2=(P2 & 0x1f)|0x80;break;   //Y4C为高电平
  19   2          case 5:P2=(P2 & 0x1f)|0xa0;break;   //5
  20   2          case 6:P2=(P2 & 0x1f)|0xc0;break;
  21   2          case 7:P2=(P2 & 0x1f)|0xe0;break;
  22   2        }
  23   1        P0=y;
  24   1        P2 &= 0x1f;   //P2 = P2 & 0x1f;
  25   1      }
  26          
  27          void aloneSMG(char pos,value)   //单个数码管显示   
  28          {
  29   1        control(7,0xff);         //消影
  30   1        control(6,0x01<<pos);    //位选 x=0 x=7
  31   1        control(7,DuanMa[value]);//段码
  32   1      }
  33          
  34          void T_Reset()
  35          {
  36   1        AUXR &= 0x7F;     //定时器时钟12T模式
  37   1        TMOD &= 0xF0;     //设置定时器模式
  38   1        TL0 = 0x18;       //设置定时初始值
  39   1        TH0 = 0xFC;       //设置定时初始值        //设置定时初始值
  40   1        TF0 = 0;
  41   1        TR0 = 1;
  42   1        ET0 = 1;//打开对应的中断
  43   1        EA = 1;
  44   1      }
  45          
  46          uchar SMGi=0;   //0-7     
  47          
  48          //矩阵按键操作
  49          uchar Key_Delay=0;
  50          uchar Key_Read()       //读取键值的函数
  51          {
  52   1        uint Key_New;
  53   1        uchar key_value=0;
  54   1        
C51 COMPILER V9.54   AT24C02______                                                         02/16/2025 20:24:27 PAGE 2   

  55   1        P44=0;P42=1;P35=1;P34=1;  //扫描第一列
  56   1        Key_New = P3 & 0x0f;      //获取第一列的四行的位置的二进制数值
  57   1        
  58   1        P44=1;P42=0;P35=1;P34=1;  //扫描第2列
  59   1        Key_New = (Key_New<<4) | (P3 & 0x0f);
  60   1        
  61   1        P44=1;P42=1;P35=0;P34=1;  //扫描第3列
  62   1        Key_New = (Key_New<<4) | (P3 & 0x0f);
  63   1        
  64   1        P44=1;P42=1;P35=1;P34=0;  //扫描第4列
  65   1        Key_New = (Key_New<<4) | (P3 & 0x0f);
  66   1        
  67   1        switch(~Key_New)
  68   1        {
  69   2          case 0x8000:key_value=4;break;  //S4
  70   2          case 0x4000:key_value=5;break;  //S5
  71   2          case 0x2000:key_value=6;break;  //S6
  72   2          case 0x1000:key_value=7;break;  //S7
  73   2          
  74   2          case 0x0800:key_value=8;break;  //S8
  75   2          case 0x0400:key_value=9;break;  //S9
  76   2          case 0x0200:key_value=10;break;  //S10
  77   2          case 0x0100:key_value=11;break;  //S11
  78   2          
  79   2          case 0x0080:key_value=12;break;  //S12
  80   2          case 0x0040:key_value=13;break;  //S13
  81   2          case 0x0020:key_value=14;break;  //S14
  82   2          case 0x0010:key_value=15;break;  //S15
  83   2          
  84   2          case 0x0008:key_value=16;break;  //S16
  85   2          case 0x0004:key_value=17;break;  //S17
  86   2          case 0x0002:key_value=18;break;  //S18
  87   2          case 0x0001:key_value=19;break;  //S19
  88   2          
  89   2          default :key_value=0;break;
  90   2        }
  91   1        return key_value;
  92   1      }
  93          
  94          void Key_pro()
  95          {
  96   1        uchar ucKey_Val,ucKey_Down,ucKey_Up,ucKey_old;
  97   1        if(Key_Delay<9)return;
  98   1        ucKey_Val = Key_Read();                         //7
  99   1        ucKey_Down = ucKey_Val & (ucKey_old ^ ucKey_Val);
 100   1        ucKey_Up = ~ucKey_Val & (ucKey_old ^ ucKey_Val);
 101   1        ucKey_old = ucKey_Val;
 102   1        
 103   1        switch(ucKey_Down)
 104   1        {
 105   2          case 4:shua--;break;
 106   2          case 5:shua++;break;
 107   2          case 8:shub--;break;
 108   2          case 9:shub++;break;
 109   2          case 13:              //存储
 110   2          {
 111   3            AT24C02_Data[0]=shua;
 112   3            AT24C02_Data[1]=shub;
 113   3            AT24C02_Write(AT24C02_Data,0,2); //0 1
 114   3            break;
 115   3          }
 116   2          case 12:              //读取数据
C51 COMPILER V9.54   AT24C02______                                                         02/16/2025 20:24:27 PAGE 3   

 117   2          {
 118   3            AT24C02_Read(AT24C02_Data,0,2);  //0 1
 119   3            shua = AT24C02_Data[0];
 120   3            shub = AT24C02_Data[1];
 121   3            break;
 122   3          }
 123   2        }
 124   1      }
 125          
 126          void T1_Server() interrupt 1    //每次执行函数就是1ms     T1
 127          {
 128   1        aloneSMG(SMGi,SMGa[SMGi]);    //SMGa[0] SMGa[1]   ----   SMGa[7]
 129   1        if(++SMGi==8)SMGi=0; 
 130   1        if(++Key_Delay==10)Key_Delay=0;
 131   1      }
 132          
 133          void Delay10ms(void)  //@12.000MHz
 134          {
 135   1        unsigned char data i, j;
 136   1      
 137   1        i = 117;
 138   1        j = 184;
 139   1        do
 140   1        {
 141   2          while (--j);
 142   2        } while (--i);
 143   1      }
 144          
 145          
 146          void main()
 147          {
 148   1        T_Reset();
 149   1        Delay10ms();
 150   1        AT24C02_Read(AT24C02_Data,0,2);  //0 1
 151   1        shua = AT24C02_Data[0];
 152   1        shub = AT24C02_Data[1];
 153   1        while(1)
 154   1        {
 155   2          Key_pro();
 156   2          SMGa[0] = shua/100%10;
 157   2          SMGa[1] = shua/10%10;
 158   2          SMGa[2] = shua%10;
 159   2          SMGa[3] = 11;
 160   2          SMGa[4] = 11;
 161   2          SMGa[5] = shub/100%10;
 162   2          SMGa[6] = shub/10%10;
 163   2          SMGa[7] = shub%10;
 164   2        }
 165   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    705    ----
   CONSTANT SIZE    =     12    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     14       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
